<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiubo.sam.dao.ToHisDao">
    <delete id="deletePP">
        DELETE FROM PA_PAYSERVICE WHERE PP_ID = #{id}
    </delete>

    <!--精确查询患者-->
    <select id="accurateQuery" parameterType="com.jiubo.sam.bean.PatientBean"
            resultType="com.jiubo.sam.bean.PatientBean">
        SELECT * FROM PATIENT
        <where>
            <if test=" idCard != null and idCard != ''">
                ID_CARD=#{idCard}
            </if>
        </where>
    </select>

    <select id="getOpenDefault" resultType="com.jiubo.sam.bean.PaPayserviceBean">
        select A.* from PA_PAYSERVICE A
         LEFT JOIN PAYSERVICE B ON A.PAYSERVICE_ID = B.PAYSERVICE_ID
         where B.PAY_TYPE = 0
    </select>
    <select id="getNewestByPAndS" resultType="com.jiubo.sam.bean.PaymentBean">
    SELECT * from PAYMENT S where
		EXISTS
        (
        SELECT
        1
        FROM
        ( SELECT PATIENT_ID, PAYSERVICE_ID, MAX ( PAYMENT_ID ) PAYMENT_ID FROM PAYMENT GROUP BY PATIENT_ID,
        PAYSERVICE_ID ) SS
        WHERE
        SS.PAYMENT_ID = S.PAYMENT_ID ) and S.ISUSE = 1
    </select>
    <select id="getSection" resultType="com.jiubo.sam.bean.PaPayserviceBean">
        select A.* from PA_PAYSERVICE A
        LEFT JOIN PAYSERVICE B ON A.PAYSERVICE_ID = B.PAYSERVICE_ID
        WHERE B.PAY_TYPE = 1
    </select>

    <!--    添加患者信息-->
    <insert id="addHisPatient" parameterType="com.jiubo.sam.dto.PatientHiSDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO PATIENT (HOSP_NUM, NAME, SEX, AGE,
        DEPT_ID,MITYPEID,ID_CARD,SOURCE,CREATE_DATE,CREATOR,FLAG,HIS_WATER_NUM)
        VALUES (#{hospNum}, #{name}, #{sex}, #{age},
         #{deptId}, #{mitypeid},#{identityCard},1,GETDATE(),#{creator},2,#{hisWaterNum})
    </insert>

    <insert id="addPPReset" parameterType="java.util.List">
        insert into PA_PAYSERVICE (PAYSERVICE_ID,IS_USE,BEG_DATE,END_DATE,
        HOSP_NUM,CREATE_DATE,UNIT_PRICE,PATIENT_ID,ID_CARD,UPDATE_DATE,
        CREATOR,REVISER,DEPT_ID) values
        <foreach collection="list" separator="," item="item" index="index">
            (#{item.payserviceId},1,#{item.begDate},
            #{item.endDate},#{item.hospNum},#{item.createDate},#{item.unitPrice},
            #{item.patientId},#{item.idCard},#{item.updateDate},
            #{item.creator},#{item.reviser},#{item.deptId}
            )
        </foreach>
    </insert>

    <update id="patchPPReset" parameterType="java.util.List">
        update PA_PAYSERVICE
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="END_DATE =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.endDate != null and i.endDate != ''">
                        when PP_ID=#{i.ppId} then #{i.endDate}
                    </if>
                </foreach>
            </trim>
            <trim prefix="IS_USE =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    when PP_ID=#{i.ppId} then 0
                </foreach>
            </trim>
            <trim prefix="UPDATE_DATE =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    when PP_ID=#{i.ppId} then GETDATE()
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="i" index="index">
            PP_ID=#{i.ppId}
        </foreach>
    </update>

    <update id="patchPPById" parameterType="com.jiubo.sam.bean.PaPayserviceBean">
        update PA_PAYSERVICE set END_DATE = #{endDate},UPDATE_DATE = GETDATE(),IS_USE = 0,CHARGE_FLAG = #{chargeFlag} where PP_ID=#{ppId}
    </update>

    <insert id="addPP" parameterType="com.jiubo.sam.bean.PaPayserviceBean">
        insert into PA_PAYSERVICE (PAYSERVICE_ID,IS_USE,BEG_DATE,END_DATE,
        HOSP_NUM,CREATE_DATE,UNIT_PRICE,PATIENT_ID,ID_CARD,UPDATE_DATE,
        CREATOR,REVISER,DEPT_ID,CHARGE_FLAG) values
        (#{payserviceId},#{isUse},#{begDate},
            #{endDate},#{hospNum},#{createDate},#{unitPrice},
            #{patientId},#{idCard},#{updateDate},
            #{creator},#{reviser},#{deptId},3
            )

    </insert>

    <update id="patchPP">
        update PA_PAYSERVICE set END_DATE = #{endDate}, UPDATE_DATE = GETDATE(),IS_USE = 3 where PP_ID=#{ppId}
    </update>

    <update id="patchPPList" parameterType="java.util.List">
        update PA_PAYSERVICE
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="END_DATE =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.endDate != null and i.endDate != ''">
                        when PP_ID=#{i.ppId} then #{i.endDate}
                    </if>
                </foreach>
            </trim>
            <trim prefix="UPDATE_DATE =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    when PP_ID=#{i.ppId} then GETDATE()
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="i" index="index">
            PP_ID=#{i.ppId}
        </foreach>
    </update>

    <select id="getDeByCode" resultType="com.jiubo.sam.bean.DepartmentBean">
        select * from DEPARTMENT where DEPT_CODE = #{deptCode}
    </select>

    <select id="getEmpByCode" resultType="com.jiubo.sam.bean.EmployeeBean">
        select * from DEPARTMENT where per_code = #{perCode}
    </select>
    <!--    HOSP_TIME, IN_HOSP,OUT_HOSP, RECEIVABLE, UPDATE_TIME, PATITYPEID,ACCOUNT_ID,EMP_ID,-->
    <!--    HOSP_BALANCE,LIAISON_MAN,LIAISON_MAN_PHONE,PATIENT_PHONE,UNIT_NAME,UNIT_ADDRESS,REVISER,-->
    <!--    #{hospTime}, #{inHosp},#{outHosp}, #{receivable},#{updateTime}, #{patitypeid},#{hospBalance},#{liaisonMan},#{liaisonManPhone},#{patientPhone}, #{unitName},-->
    <!--    #{unitAddress},#{accountId},#{empId},#{reviser},-->
</mapper>
