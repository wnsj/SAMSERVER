<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiubo.sam.dao.PaymentDao">

    <!--    收费信息汇总查询-->
    <select id="queryGatherPayment" resultType="java.util.Map">
        ${sql}
    </select>

    <!--    根据患者id查询交费信息-->
    <select id="queryPaymentByPatientId" resultType="com.jiubo.sam.bean.PaymentBean">
        SELECT A.PAYMENT_ID,
               A.PATIENT_ID,
               A.PAYSERVICE_ID,
               A.RECEIVABLE,
               A.ACTUALPAYMENT,
               A.BEGTIME,
               A.ENDTIME,
               A.PAYMENTTIME,
               A.UPDATETIME,
               A.ISUSE,
               B.NAME AS PAYSERVICENAME
        FROM PAYMENT A,
             PAYSERVICE B,
             (
              SELECT MAX(PAYMENTTIME) PAYMENTTIME
              FROM PAYMENT
              WHERE PATIENT_ID = #{patientId}
             ) C
        WHERE A.PAYSERVICE_ID = B.PAYSERVICE_ID
          AND B.ISUSE = 1 AND A.PAYMENTTIME = C.PAYMENTTIME
          AND A.PATIENT_ID = #{patientId} AND B.ISUSE = 1
        UNION ALL
        SELECT 0               AS PAYMENT_ID,
               #{patientId}    AS PATIENT_ID,
               C.PAYSERVICE_ID AS PAYSERVICE_ID,
               0               AS RECEIVABLE,
               0               AS ACTUALPAYMENT,
               NULL            AS BEGTIME,
               NULL            AS ENDTIME,
               NULL            AS PAYMENTTIME,
               NULL            AS UPDATETIME,
               'false'         AS ISUSE,
               C.NAME          AS PAYSERVICENAME
        FROM PAYSERVICE C
        WHERE NOT EXISTS(SELECT * FROM PAYMENT WHERE PAYSERVICE_ID = C.PAYSERVICE_ID AND PATIENT_ID = #{patientId})
          AND C.ISUSE = 1
    </select>

    <!--    据患者Id及收费时间查询患者信息及缴费信息-->
    <select id="queryPaymentByPatientIdTime" resultType="com.jiubo.sam.bean.PaymentBean">
            SELECT
                A.PAYMENT_ID,
                A.PATIENT_ID,
                A.PAYSERVICE_ID,
                A.RECEIVABLE,
                A.ACTUALPAYMENT,
                A.BEGTIME,
                A.ENDTIME,
                A.PAYMENTTIME,
                A.UPDATETIME,
                A.ISUSE,
                B.NAME AS PAYSERVICENAME,
                A.PAYMENT_REMARK
            FROM PAYMENT A,PAYSERVICE B
            WHERE A.PAYSERVICE_ID = B.PAYSERVICE_ID
            AND B.ISUSE = 1
            AND A.PATIENT_ID = #{patientId}
            <if test="isuse != null and isuse != ''">
                <choose>
                    <when test="isuse == 0">
                        AND A.ISUSE = 0
                    </when>
                    <when test="isuse == 1">
                        AND A.ISUSE = 1
                    </when>
                </choose>
            </if>
            <if test="paymenttime != null and paymenttime != ''">
                AND A.PAYMENTTIME = #{paymenttime}
            </if>
            <if test="unAll != null and unAll != ''">
                UNION ALL
                SELECT 0       AS PAYMENT_ID,
                #{patientId}    AS PATIENT_ID,
                C.PAYSERVICE_ID AS PAYSERVICE_ID,
                0               AS RECEIVABLE,
                0               AS ACTUALPAYMENT,
                NULL            AS BEGTIME,
                NULL            AS ENDTIME,
                NULL            AS PAYMENTTIME,
                NULL            AS UPDATETIME,
                'false'         AS ISUSE,
                C.NAME          AS PAYSERVICENAME,
                NULL            AS PAYMENT_REMARK
                FROM PAYSERVICE C
                WHERE NOT EXISTS(
                    SELECT * FROM PAYMENT
                    WHERE PAYSERVICE_ID = C.PAYSERVICE_ID AND PATIENT_ID = #{patientId}
                    <if test="paymenttime != null and paymenttime != ''">
                        AND PAYMENTTIME = #{paymenttime}
                    </if>
                )
                AND C.ISUSE = 1
            </if>
    </select>

    <sql id="addPaymentListSQL">
        INSERT INTO PAYMENT (PATIENT_ID, PAYSERVICE_ID, RECEIVABLE, ACTUALPAYMENT, BEGTIME, ENDTIME,
                             PAYMENTTIME, UPDATETIME, ISUSE,PAYMENT_REMARK,ACCOUNT_ID,PRICE,DAYS)
        VALUES (#{item.patientId}, #{item.payserviceId}, #{item.receivable}, #{item.actualpayment},
                #{item.begtime},#{item.endtime},#{item.paymenttime}, GETDATE(),#{item.isuse},
                #{item.paymentRemark},#{item.accountId},#{item.price},#{item.days}
                );
    </sql>

    <!--    添加或修改交费信息-->
    <insert id="addPayment">
        <if test="list != null and list.size() > 0">
            <foreach collection="list" item="item">
               <include refid="addPaymentListSQL"></include>
            </foreach>
        </if>
    </insert>

    <!--    修改交费信息-->
    <update id="updatePayment">
        <if test="list != null and list.size() > 0">
            <foreach collection="list" item="item">
                UPDATE PAYMENT
                SET
                PATIENT_ID = #{item.patientId}
                , PAYSERVICE_ID = #{item.payserviceId}
                , RECEIVABLE = #{item.receivable}
                , ACTUALPAYMENT = #{item.actualpayment}
                , BEGTIME = #{item.begtime}
                , ENDTIME = #{item.endtime}
                , PAYMENTTIME = #{item.paymenttime}
                , UPDATETIME = GETDATE()
                , ISUSE = #{item.isuse}
                , PAYMENT_REMARK = #{item.paymentRemark}
                , ACCOUNT_ID = #{item.accountId}
                , PRICE = #{item.price},
                , DAYS = #{item.days}
                WHERE PAYMENT_ID = #{item.paymentId};
                IF NOT  EXISTS(SELECT * FROM PAYMENT WHERE PAYMENT_ID = #{item.paymentId})
                <include refid="addPaymentListSQL"></include>
            </foreach>
        </if>
    </update>

    <!--    删除缴费信息-->
    <delete id="deletePayment">
        <if test="list != null and list.size() > 0">
            <foreach collection="list" item="item">
               DELETE FROM PAYMENT
               WHERE PAYMENT_ID = #{item.paymentId}
            </foreach>
        </if>
    </delete>
</mapper>
