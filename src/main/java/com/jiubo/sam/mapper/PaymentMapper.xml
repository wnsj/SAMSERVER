<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiubo.sam.dao.PaymentDao">

    <!--    收费信息汇总查询-->
    <select id="queryGatherPayment" resultType="java.util.Map">
        ${sql}
    </select>

    <select id="queryNewByPatientIdPayment" parameterType="com.jiubo.sam.bean.PaymentBean"
            resultType="com.jiubo.sam.bean.PaymentBean">
        SELECT PA.*,PS.NAME AS payserviceName,DATEDIFF(DAY,GETDATE(),MAXDATE) AS DATEDIFFRENT,PAT.APTOTLE FROM
        (SELECT P.PATIENT_ID,P.PAYSERVICE_ID,MAX(P.ENDTIME) MAXDATE,SUM(P.ACTUALPAYMENT) AS APTOTLE
        FROM PAYMENT P
        GROUP BY P.PATIENT_ID,P.PAYSERVICE_ID) PAT
        LEFT JOIN PAYMENT PA ON PA.PATIENT_ID=PAT.PATIENT_ID
        LEFT JOIN PAYSERVICE PS ON PS.PAYSERVICE_ID=PA.PAYSERVICE_ID
        WHERE PAT.PAYSERVICE_ID=PA.PAYSERVICE_ID AND PAT.MAXDATE=PA.ENDTIME
        <if test="patientId != null and patientId != ''">
            AND PA.PATIENT_ID = #{patientId}
        </if>
        ORDER BY DATEDIFFRENT
    </select>
    <!--    根据患者id查询交费信息-->
    <select id="queryPaymentByPatientId" resultType="com.jiubo.sam.bean.PaymentBean">
        SELECT A.PAYMENT_ID,
               A.DEPT_ID,
               A.PATIENT_ID,
               A.PAYSERVICE_ID,
               A.RECEIVABLE,
               A.ACTUALPAYMENT,
               A.BEGTIME,
               A.ENDTIME,
               A.PAYMENTTIME,
               A.UPDATETIME,
               A.ISUSE,
               B.NAME AS PAYSERVICENAME
        FROM PAYMENT A,
             PAYSERVICE B,
             (
                 SELECT MAX(PAYMENTTIME) PAYMENTTIME
                 FROM PAYMENT
                 WHERE PATIENT_ID = #{patientId}
             ) C
        WHERE A.PAYSERVICE_ID = B.PAYSERVICE_ID
          AND B.ISUSE = 1
          AND A.PAYMENTTIME = C.PAYMENTTIME
          AND A.PATIENT_ID = #{patientId}
          AND B.ISUSE = 1
        UNION ALL
        SELECT 0               AS PAYMENT_ID,
               0               AS DEPT_ID,
               #{patientId}    AS PATIENT_ID,
               C.PAYSERVICE_ID AS PAYSERVICE_ID,
               0               AS RECEIVABLE,
               0               AS ACTUALPAYMENT,
               NULL            AS BEGTIME,
               NULL            AS ENDTIME,
               NULL            AS PAYMENTTIME,
               NULL            AS UPDATETIME,
               'false'         AS ISUSE,
               C.NAME          AS PAYSERVICENAME
        FROM PAYSERVICE C
        WHERE NOT EXISTS(
                SELECT *
                FROM PAYMENT
                WHERE PAYSERVICE_ID = C.PAYSERVICE_ID
                  AND PAYMENTTIME = (
                    SELECT MAX(PAYMENTTIME) PAYMENTTIME
                    FROM PAYMENT
                    WHERE PATIENT_ID = #{patientId}
                )
            )
          AND C.ISUSE = 1
    </select>

    <!--    据患者Id及收费时间查询患者信息及缴费信息-->
    <select id="queryPaymentByPatientIdTime" resultType="com.jiubo.sam.bean.PaymentBean">
        SELECT A.DEPT_ID,
        A.PAYMENT_ID,
        A.PATIENT_ID,
        A.PAYSERVICE_ID,
        A.RECEIVABLE,
        A.ACTUALPAYMENT,
        A.BEGTIME,
        A.ENDTIME,
        A.PAYMENTTIME,
        A.UPDATETIME,
        A.ISUSE,
        B.NAME AS PAYSERVICENAME,
        A.PAYMENT_REMARK,
        A.DAYS,
        A.PRICE,
        A.ACCOUNT_ID,
        A.EMP_ID
        FROM PAYMENT A,PAYSERVICE B
        WHERE A.PAYSERVICE_ID = B.PAYSERVICE_ID
        AND B.ISUSE = 1
        AND A.PATIENT_ID = #{patientId}
        <if test="isuse != null and isuse != ''">
            <choose>
                <when test="isuse == 0">
                    AND A.ISUSE = 0
                </when>
                <when test="isuse == 1">
                    AND A.ISUSE = 1
                </when>
            </choose>
        </if>
        <if test="paymenttime != null and paymenttime != ''">
            AND A.PAYMENTTIME = #{paymenttime}
        </if>
        <if test="unAll != null and unAll != ''">
            UNION ALL
            SELECT 0 AS DEPT_ID,
            0 AS PAYMENT_ID,
            #{patientId} AS PATIENT_ID,
            C.PAYSERVICE_ID AS PAYSERVICE_ID,
            0 AS RECEIVABLE,
            0 AS ACTUALPAYMENT,
            NULL AS BEGTIME,
            NULL AS ENDTIME,
            NULL AS PAYMENTTIME,
            NULL AS UPDATETIME,
            'false' AS ISUSE,
            C.NAME AS PAYSERVICENAME,
            NULL AS PAYMENT_REMARK,
            0 AS DAYS,
            0 AS PRICE,
            0 AS ACCOUNT_ID,
            0 AS EMP_ID
            FROM PAYSERVICE C
            WHERE NOT EXISTS(
            SELECT * FROM PAYMENT
            WHERE PAYSERVICE_ID = C.PAYSERVICE_ID AND PATIENT_ID = #{patientId}
            <if test="paymenttime != null and paymenttime != ''">
                AND PAYMENTTIME = #{paymenttime}
            </if>
            )
            AND C.ISUSE = 1
        </if>
    </select>

    <sql id="addPaymentListSQL">
        INSERT INTO PAYMENT (PATIENT_ID, PAYSERVICE_ID, RECEIVABLE, ACTUALPAYMENT, BEGTIME, ENDTIME,
                             PAYMENTTIME, UPDATETIME, ISUSE, PAYMENT_REMARK, ACCOUNT_ID, PRICE, DAYS, DEPT_ID,EMP_ID)
        VALUES (#{item.patientId}, #{item.payserviceId}, #{item.receivable}, #{item.actualpayment},
                #{item.begtime}, #{item.endtime}, #{item.paymenttime}, GETDATE(), #{item.isuse},
                #{item.paymentRemark}, #{item.accountId}, #{item.price}, #{item.days}, #{item.deptId},#{item.empId});
    </sql>

    <!--    添加或修改交费信息-->
    <insert id="addPayment">
        <if test="list != null and list.size() > 0">
            <foreach collection="list" item="item">
                <include refid="addPaymentListSQL"></include>
            </foreach>
        </if>
    </insert>

    <!--    修改交费信息-->
    <update id="updatePayment">
        <if test="list != null and list.size() > 0">
            <foreach collection="list" item="item">
                UPDATE PAYMENT
                SET
                PATIENT_ID = #{item.patientId}
                , PAYSERVICE_ID = #{item.payserviceId}
                , RECEIVABLE = #{item.receivable}
                , ACTUALPAYMENT = #{item.actualpayment}
                , BEGTIME = #{item.begtime}
                , ENDTIME = #{item.endtime}
                , PAYMENTTIME = #{item.paymenttime}
                , UPDATETIME = GETDATE()
                , ISUSE = #{item.isuse}
                , PAYMENT_REMARK = #{item.paymentRemark}
                , ACCOUNT_ID = #{item.accountId}
                , PRICE = #{item.price}
                , DEPT_ID = #{item.deptId}
                , DAYS = #{item.days}
                , EMP_ID = #{item.empId}
                WHERE PAYMENT_ID = #{item.paymentId};
                IF NOT EXISTS(SELECT * FROM PAYMENT WHERE PAYMENT_ID = #{item.paymentId})
                <include refid="addPaymentListSQL"></include>
            </foreach>
        </if>
    </update>

    <!--    删除缴费信息-->
    <delete id="deletePayment">
        <if test="list != null and list.size() > 0">
            <foreach collection="list" item="item">
                DELETE FROM PAYMENT
                WHERE PAYMENT_ID = #{item.paymentId}
            </foreach>
        </if>
    </delete>

    <sql id="gatherPaymentListSQL">
        SELECT
        PAY.PAYMENT_ID, PAY.PAYSERVICE_ID, PAY.RECEIVABLE, PAY.ACTUALPAYMENT, CONVERT(VARCHAR(100), PAY.BEGTIME, 120)
        BEGTIME,
        CONVERT(VARCHAR(100), PAY.ENDTIME, 120) ENDTIME, PAY.PAYMENTTIME, PAY.ISUSE,
        PAY.UPDATETIME, PAY.PAYMENT_REMARK, PAY.ACCOUNT_ID, PAY.PRICE, PAY.DAYS, PAY.DEPT_ID,
        PA.PATIENT_ID, PA.HOSP_NUM, PA.NAME, PA.SEX, PA.AGE, PA.HOSP_TIME, PA.IN_HOSP, PA.OUT_HOSP, PA.PATITYPEID,
        PA.MITYPEID, PA.UPDATE_TIME
        ,PS.NAME AS PAYSERVICENAME,DATEDIFF(DAY,GETDATE(),MAXDATE) AS DATEDIFFRENT,PAT.APTOTLE,
        CASE WHEN DATEDIFF(DAY,GETDATE(),MAXDATE) &lt; 0 THEN DATEDIFF(DAY,GETDATE(),MAXDATE) * PAY.PRICE ELSE 0 END
        TOTAL,D.NAME DEPT_NAME,P2.PATITYPENAME,M.MITYPENAME
        FROM (
        SELECT P.PATIENT_ID,P.PAYSERVICE_ID,MAX(P.ENDTIME) MAXDATE,SUM(P.ACTUALPAYMENT) AS APTOTLE
        FROM PAYMENT P
        WHERE P.ISUSE = 1
        GROUP BY P.PATIENT_ID,P.PAYSERVICE_ID
        ) PAT,PAYMENT PAY
        LEFT JOIN PATIENT PA ON PA.PATIENT_ID = PAY.PATIENT_ID
        LEFT JOIN PAYSERVICE PS ON PS.PAYSERVICE_ID = PAY.PAYSERVICE_ID
        LEFT JOIN PATIENTTYPE P2 ON PA.PATITYPEID = P2.PATITYPEID
        LEFT JOIN MEDICINSURTYPE M ON PA.MITYPEID = M.MITYPEID
        LEFT JOIN DEPARTMENT D ON D.DEPT_ID = PAY.DEPT_ID
        WHERE PAY.ISUSE = 1 AND PAT.PATIENT_ID = PAY.PATIENT_ID
        AND PAT.PAYSERVICE_ID = PAY.PAYSERVICE_ID
        AND PAT.MAXDATE = PAY.ENDTIME
        <if test="hospNum != null and hospNum != ''">
            AND PA.HOSP_NUM = #{hospNum}
        </if>
        <if test="deptId != null and deptId != ''">
            AND PA.DEPT_ID = #{deptId}
        </if>
        <if test="name != null and name != ''">
            AND PA.NAME LIKE '%' + #{name} + '%'
        </if>
        <if test="patitypeid != null and patitypeid != ''">
            AND PA.PATITYPEID = #{patitypeid}
        </if>
        <if test="mitypeid != null and mitypeid != ''">
            AND PA.MITYPEID = #{mitypeid}
        </if>
        <if test="endDate != null and endDate != ''">
            AND PAY.ENDTIME &lt; #{endDate}
        </if>
        <if test="payServiceArr != null and payServiceArr.length > 0">
            AND PAY.PAYSERVICE_ID IN
            <foreach collection="payServiceArr" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="inHosp != null and inHosp != ''">
            AND PA.IN_HOSP = #{inHosp}
        </if>
        <if test="begHospTime != null and begHospTime != ''">
            AND PA.HOSP_TIME >= #{begHospTime}
        </if>
        <if test="endHospTime != null and endHospTime != ''">
            AND PA.HOSP_TIME &lt; #{endHospTime}
        </if>
    </sql>

    <!--    缴费统计-->
    <select id="queryGatherPaymentList" resultType="java.util.Map">
        SELECT * FROM (
        <include refid="gatherPaymentListSQL"/>
        ) T
        WHERE 1 = 1
        <if test="dateDiffrent != null and dateDiffrent != ''">
            <choose>
                <when test="dateDiffrent == 0">
                    AND T.DATEDIFFRENT > 0
                </when>
                <when test="dateDiffrent == 1">
                    AND T.DATEDIFFRENT &lt; 0
                </when>
            </choose>
        </if>
    </select>

    <!--    缴费统计汇总-->
    <select id="queryGatherPaymentTotal" resultType="java.util.Map">
        SELECT SUM(T.TOTAL) TOTAL
        FROM (
        <include refid="gatherPaymentListSQL"/>
        ) T
        WHERE 1 = 1
        <if test="dateDiffrent != null and dateDiffrent != ''">
            <choose>
                <when test="dateDiffrent == 0">
                    AND T.DATEDIFFRENT > 0
                </when>
                <when test="dateDiffrent == 1">
                    AND T.DATEDIFFRENT &lt; 0
                </when>
            </choose>
        </if>
    </select>

    <select id="queryPaymentByHospNum" resultType="com.jiubo.sam.bean.PaymentBean">
        SELECT
               E.PAYMENT_ID,
               E.DEPT_ID,
               #{patientId} as PATIENT_ID,
               PP.PAYSERVICE_ID,
               E.RECEIVABLE,
               E.ACTUALPAYMENT,
               E.BEGTIME,
               E.ENDTIME,
               E.PAYMENTTIME,
               E.UPDATETIME,
               PP.IS_USE,
               P.NAME AS PAYSERVICENAME,
               PP.HOSP_NUM
        FROM PA_PAYSERVICE PP
        LEFT JOIN PAYSERVICE P
        ON PP.PAYSERVICE_ID = P.PAYSERVICE_ID
        LEFT JOIN (
        SELECT A.PAYMENT_ID,
               A.DEPT_ID,
               A.PATIENT_ID,
               A.PAYSERVICE_ID,
               A.RECEIVABLE,
               A.ACTUALPAYMENT,
               A.BEGTIME,
               A.ENDTIME,
               A.PAYMENTTIME,
               A.UPDATETIME,
               A.ISUSE,
               B.NAME AS PAYSERVICENAME,
               D.HOSP_NUM
        FROM PAYMENT A,
             PAYSERVICE B,
             (
                 SELECT MAX(PAYMENTTIME) PAYMENTTIME
                 FROM PAYMENT
                 WHERE PATIENT_ID = #{patientId}
             ) C,
             PATIENT D
        WHERE A.PAYSERVICE_ID = B.PAYSERVICE_ID
          AND A.PAYMENTTIME = C.PAYMENTTIME
          AND A.PATIENT_ID =  #{patientId}
          AND A.PATIENT_ID = D.PATIENT_ID
        ) E ON E.HOSP_NUM = PP.HOSP_NUM AND PP.PAYSERVICE_ID = E.PAYSERVICE_ID
        WHERE PP.HOSP_NUM = #{hospNum} AND PP.IS_USE = 1 AND P.ISUSE = 1
    </select>

    <sql id="queryGatherPaymentTwoSQL">
        SELECT
        D.*,
        PAT.HOSP_NUM, PAT.NAME, PAT.SEX,
        PAT.AGE, PAT.HOSP_TIME, PAT.IN_HOSP,
        PAT.OUT_HOSP, PAT.RECEIVABLE, PAT.PATITYPEID,
        PAT.MITYPEID, PAT.UPDATE_TIME,
        PAT.ACCOUNT_ID, PAT.EMP_ID,
        DEPT.NAME DEPT_NAME,
        PATIENTTYPE.PATITYPENAME,
        MEDICINSURTYPE.MITYPENAME,
        PS.NAME AS PAYSERVICENAME
        FROM (
            SELECT
            C.PATIENT_ID,
            C.PAYSERVICE_ID,
            SUM(DAYS) DAYS,
            MAX(C.PRICE) PRICE,
            MAX(C.ENDTIME) ENDTIME,
            CASE WHEN SUM(DAYS) > 0 THEN - SUM(DAYS) * MAX(C.PRICE) ELSE 0 END TOTAL,
            C.DEPT_ID
            FROM (
                SELECT
                P.PATIENT_ID,
                P.PAYSERVICE_ID,
                P.ENDTIME,
                P.PRICE,
                P.DEPT_ID,
                CASE WHEN P.ENDTIME > PP.BEG_DATE THEN P.ENDTIME ELSE PP.BEG_DATE END AS BEG_DATE,
                CASE WHEN PP.END_DATE IS NULL THEN GETDATE() ELSE PP.END_DATE END AS END_DATE,
                DATEDIFF (DAY,CASE WHEN P.ENDTIME > PP.BEG_DATE THEN P.ENDTIME ELSE PP.BEG_DATE END ,CASE WHEN PP.END_DATE IS NULL THEN GETDATE() ELSE PP.END_DATE END) AS DAYS
                FROM (
                    SELECT A.*
                    FROM PAYMENT A,
                    (
                        SELECT PATIENT_ID,MAX(PAYMENTTIME) PAYMENTTIME
                        FROM PAYMENT
                        GROUP BY PATIENT_ID
                    ) B
                    WHERE A.PATIENT_ID = B.PATIENT_ID AND A.PAYMENTTIME = B.PAYMENTTIME
                ) P
                LEFT JOIN PA_PAYSERVICE PP
                ON P.PAYSERVICE_ID = PP.PAYSERVICE_ID
                WHERE P.PATIENT_ID = PP.PATIENT_ID AND (P.ENDTIME &lt; PP.BEG_DATE OR P.ENDTIME &lt; PP.END_DATE)
            ) C
            GROUP BY C.PATIENT_ID,C.PAYSERVICE_ID, C.DEPT_ID
        ) D
        LEFT JOIN PATIENT PAT ON PAT.PATIENT_ID = D.PATIENT_ID
        LEFT JOIN PAYSERVICE PS ON PS.PAYSERVICE_ID = D.PAYSERVICE_ID
        LEFT JOIN DEPARTMENT DEPT ON DEPT.DEPT_ID = D.DEPT_ID
        LEFT JOIN PATIENTTYPE ON PATIENTTYPE.PATITYPEID = PAT.PATITYPEID
        LEFT JOIN MEDICINSURTYPE ON MEDICINSURTYPE.MITYPEID = PAT.MITYPEID
        <where>
            <if test="hospNum != null and hospNum != ''">
                AND PAT.HOSP_NUM = #{hospNum}
            </if>
            <if test="deptId != null and deptId != ''">
                AND D.DEPT_ID = #{deptId}
            </if>
            <if test="name != null and name != ''">
                AND PAT.NAME LIKE '%' + #{name} + '%'
            </if>
            <if test="patitypeid != null and patitypeid != ''">
                AND PAT.PATITYPEID = #{patitypeid}
            </if>
            <if test="mitypeid != null and mitypeid != ''">
                AND PAT.MITYPEID = #{mitypeid}
            </if>
            <if test="endDate != null and endDate != ''">
                AND D.ENDTIME &lt; #{endDate}
            </if>
            <if test="payServiceArr != null and payServiceArr.length > 0">
                AND D.PAYSERVICE_ID IN
                <foreach collection="payServiceArr" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="inHosp != null and inHosp != ''">
                AND PAT.IN_HOSP = #{inHosp}
            </if>
            <if test="begHospTime != null and begHospTime != ''">
                AND PAT.HOSP_TIME >= #{begHospTime}
            </if>
            <if test="endHospTime != null and endHospTime != ''">
                AND PAT.HOSP_TIME &lt; #{endHospTime}
            </if>
        </where>
    </sql>

    <select id="queryGatherPaymentTwo" resultType="java.util.Map">
        select * from (
           <include refid="queryGatherPaymentTwoSQL"/>
        ) T
        <where>
            <if test="dateDiffrent != null and dateDiffrent != ''">
                <choose>
                    <when test="dateDiffrent == 0">
                        AND T.TOTAL >= 0
                    </when>
                    <when test="dateDiffrent == 1">
                        AND T.TOTAL &lt; 0
                    </when>
                </choose>
            </if>
        </where>
    </select>

    <select id="queryGatherPaymentTotalTwo" resultType="java.util.Map">
        SELECT ISNULL(SUM(T.TOTAL),0) TOTAL
        FROM (
          <include refid="queryGatherPaymentTwoSQL"/>
        ) T
        <where>
            <if test="dateDiffrent != null and dateDiffrent != ''">
                <choose>
                    <when test="dateDiffrent == 0">
                        AND T.TOTAL >= 0
                    </when>
                    <when test="dateDiffrent == 1">
                        AND T.TOTAL &lt; 0
                    </when>
                </choose>
            </if>
        </where>
    </select>
    
    <select id="getPaymentDetails" parameterType="com.jiubo.sam.bean.PaymentBean"
            resultType="com.jiubo.sam.bean.PaymentBean">
        SELECT CONVERT(varchar(100), PAYMENTTIME, 111) as PAYMENTTIME,PAYSERVICE_ID,SUM(ACTUALPAYMENT) as ACTUALPAYMENT
        FROM PAYMENT
        WHERE ISUSE = 1 and PATIENT_ID = #{patientId}
        <if test="payserviceId != null and payserviceId != '' and payserviceId != 0">
            and PAYSERVICE_ID = #{payserviceId}
        </if>
        <if test="paymenttime != null and paymenttime != ''">
            and CONVERT(varchar(4), PAYMENTTIME, 121) = #{paymenttime}
        </if>
        GROUP BY PAYMENTTIME,PAYSERVICE_ID
    </select>
</mapper>
